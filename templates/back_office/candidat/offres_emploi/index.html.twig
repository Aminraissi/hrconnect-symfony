{% extends 'back_office.html.twig' %}

{% block title %}
    Liste des offres d'emploi
{% endblock %}

{% block css %}
    {{ parent() }}
    <style>
        .btn-success {
            background-color: #28a745;
            color: white;
            border-radius: 5px;
            padding: 5px 10px;
            margin-right: 5px;
            display: inline-block;
        }
        .btn-success:hover {
            background-color: #218838;
        }
        .btn-info {
            background-color: #17a2b8;
            color: white;
            border-radius: 5px;
            padding: 5px 10px;
            margin-right: 5px;
            display: inline-block;
        }
        .btn-info:hover {
            background-color: #138496;
        }
        .btn-view, .btn-apply {
            display: inline-block;
            padding: 5px 10px;
            margin-right: 5px;
            border-radius: 5px;
            color: white;
        }
        .btn-view {
            background-color: #17a2b8;
        }
        .btn-apply {
            background-color: #28a745;
        }
        .action {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        /* Styles pour la recherche */
        .search-box {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .search-results {
            transition: all 0.3s ease;
        }
        .highlight {
            background-color: #fff3cd;
            padding: 2px;
            border-radius: 3px;
            font-weight: bold;
        }
        .table-heading {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
        }
        .table-heading h2 {
            margin: 0;
        }
        #search-loader {
            width: 25px;
            height: 25px;
        }

        /* Animation pour le loader */
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .spinner-border {
            display: inline-block;
            width: 2rem;
            height: 2rem;
            vertical-align: text-bottom;
            border: 0.25em solid currentColor;
            border-right-color: transparent;
            border-radius: 50%;
            animation: spin .75s linear infinite;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-xl-12 col-sm-12 col-12">
            <div class="breadcrumb-path mb-4">
                <ul class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="{{ path('app_back_office') }}"><img src="{{ asset('assets/img/dash.png')}}" class="mr-2" alt="breadcrumb"/>Home</a>
                    </li>
                    <li class="breadcrumb-item active">
                        Liste des offres d'emploi</li>
                </ul>
                <h3>Offres d'emploi</h3>
            </div>
        </div>

        <!-- Début du formulaire de recherche avancée -->
        <div class="col-xl-12 col-sm-12 col-12 mb-4">
            <div class="card search-box">
                <div class="card-header">
                    <h5 class="card-title">Recherche avancée</h5>
                </div>
                <div class="card-body">
                    <form id="advanced-search-form" method="GET" action="{{ path('back.candidat.offres_emploi.advanced_search') }}">
                        <div class="row">
                            <div class="col-md-9">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i data-feather="search"></i></span>
                                    </div>
                                    <input type="text" id="search-title" name="title" class="form-control" placeholder="Rechercher une offre par titre..." value="{{ searchTerm|default('') }}">
                                </div>
                            </div>
                            <div class="col-md-3">
                                <button type="button" id="reset-search" class="btn btn-secondary mr-2">
                                    <i data-feather="refresh-cw"></i> Réinitialiser
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i data-feather="search"></i> Rechercher
                                </button>
                                <button type="button" id="test-search" class="btn btn-info mt-2">
                                    <i data-feather="search"></i> Test Recherche
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- Fin du formulaire de recherche avancée -->
        <div class="col-xl-12 col-sm-12 col-12 mb-4">
            <div class="head-link-set">
                <ul>
                    <li>
                        <a class="active" href="{{ path('back.candidat.offres_emploi.index') }}">Toutes les offres</a>
                    </li>
                    <li>
                        <a href="{{ path('app_candidature_suivi') }}">Suivre ma candidature</a>
                    </li>
                </ul>
                {# Pas de bouton "Ajouter une offre" pour les candidats #}
            </div>
        </div>
        <div class="col-xl-12 col-sm-12 col-12 mb-4">
            <div class="row">
                <div class="col-xl-10 col-sm-8 col-12 ">
                    {% if searchTerm is defined and searchTerm %}
                        <label class="employee_count">{{ offres|length }} offre(s) trouvée(s) pour "{{ searchTerm }}"</label>
                    {% else %}
                        <label class="employee_count">{{ offres|length }} Offres</label>
                    {% endif %}
                </div>
            </div>
        </div>
        <div class="col-xl-12 col-sm-12 col-12 mb-4">
            <div class="card">
                <div class="table-heading">
                    <h2>Liste des offres</h2>
                </div>
                {% if searchTerm is defined and searchTerm and offres is empty %}
                    <div class="alert alert-info">
                        Aucune offre ne correspond à votre recherche "{{ searchTerm }}".
                    </div>
                {% endif %}
                <div class="text-center mb-3" id="search-loader" style="display: none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Chargement...</span>
                    </div>
                    <p class="mt-2">Recherche en cours...</p>
                </div>
                <div class="table-responsive search-results" id="search-results">
                    <table class="table custom-table no-footer">
                        <thead>
                            <tr>
                                <th>Titre</th>
                                <th>Localisation</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="results-body">
                            {% include 'back_office/candidat/offres_emploi/_search_results.html.twig' with {'offres': offres, 'searchTerm': searchTerm} %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {# Remplacer le parent() par les scripts individuels sans ApexCharts #}
    <script src="{{ asset('assets/js/jquery-3.6.0.min.js') }}"></script>
    <script src="{{ asset('assets/js/popper.min.js') }}"></script>
    <script src="{{ asset('assets/js/bootstrap.min.js') }}"></script>
    <script src="{{ asset('assets/js/feather.min.js') }}"></script>
    <script src="{{ asset('assets/plugins/slimscroll/jquery.slimscroll.min.js') }}"></script>
    <script src="{{ asset('assets/js/script.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser les variables
            let searchTimeout;
            const searchForm = document.getElementById('advanced-search-form');
            const searchInput = document.getElementById('search-title');
            const searchLoader = document.getElementById('search-loader');
            const resultsBody = document.getElementById('results-body');
            const resetButton = document.getElementById('reset-search');

            // Initialiser les icônes Feather
            if (typeof feather !== 'undefined') {
                feather.replace();
            }

            // Fonction pour effectuer la recherche
            function performSearch() {
                console.log('Début de la recherche...');

                // Vérifier si les éléments existent
                if (!searchForm) {
                    console.error('Le formulaire de recherche n\'existe pas');
                    return;
                }
                if (!searchLoader) {
                    console.error('Le loader n\'existe pas');
                    return;
                }
                if (!resultsBody) {
                    console.error('Le conteneur de résultats n\'existe pas');
                    return;
                }

                // Afficher le loader
                searchLoader.style.display = 'block';
                console.log('Loader affiché');

                // Récupérer les valeurs du formulaire
                const formData = new FormData(searchForm);
                const searchValue = formData.get('title');
                console.log('Valeur de recherche:', searchValue);

                // URL de la requête
                const url = '{{ path("back.candidat.offres_emploi.advanced_search") }}';
                console.log('URL de la requête:', url);

                // Construire l'URL avec les paramètres
                const searchParams = new URLSearchParams();
                searchParams.append('title', searchValue);
                const urlWithParams = url + '?' + searchParams.toString();
                console.log('URL complète:', urlWithParams);

                // Envoyer la requête Ajax
                fetch(urlWithParams, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        'Accept': 'text/plain'
                    }
                })
                .then(response => {
                    console.log('Réponse reçue:', response.status);
                    return response.text();
                })
                .then(html => {
                    console.log('HTML reçu:', html.substring(0, 100) + '...');

                    // Masquer le loader
                    searchLoader.style.display = 'none';
                    console.log('Loader masqué');

                    // Mettre à jour les résultats
                    resultsBody.innerHTML = html;
                    console.log('Résultats mis à jour');

                    // Réinitialiser les icônes Feather
                    if (typeof feather !== 'undefined') {
                        feather.replace();
                        console.log('Icônes Feather réinitialisées');
                    }
                })
                .catch(error => {
                    console.error('Erreur lors de la recherche:', error);
                    searchLoader.style.display = 'none';
                });
            }

            // Gestionnaire d'événement pour le formulaire de recherche
            searchForm.addEventListener('submit', function(e) {
                console.log('Formulaire soumis');
                e.preventDefault(); // Empêcher la soumission normale du formulaire
                performSearch();
            });
            console.log('Gestionnaire d\'\u00e9v\u00e9nement pour le formulaire ajout\u00e9');

            // Gestionnaire d'événement pour le champ de recherche (recherche en temps réel)
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    console.log('Saisie dans le champ de recherche');
                    clearTimeout(searchTimeout);
                    searchTimeout = setTimeout(performSearch, 500);
                });
                console.log('Gestionnaire d\'\u00e9v\u00e9nement pour le champ de recherche ajout\u00e9');
            } else {
                console.error('Le champ de recherche n\'existe pas');
            }

            // Gestionnaire d'événement pour le bouton de réinitialisation
            if (resetButton) {
                resetButton.addEventListener('click', function() {
                    console.log('Bouton de r\u00e9initialisation cliqu\u00e9');
                    searchForm.reset();
                    performSearch();
                });
                console.log('Gestionnaire d\'\u00e9v\u00e9nement pour le bouton de r\u00e9initialisation ajout\u00e9');
            } else {
                console.error('Le bouton de r\u00e9initialisation n\'existe pas');
            }

            // Gestionnaire d'événement pour le bouton de test
            const testButton = document.getElementById('test-search');
            if (testButton) {
                testButton.addEventListener('click', function() {
                    console.log('Bouton de test cliqué');
                    // Appel direct à la route de recherche
                    const testUrl = '{{ path("back.candidat.offres_emploi.advanced_search") }}?title=test';
                    console.log('Test URL:', testUrl);

                    // Ouvrir dans une nouvelle fenêtre pour vérifier
                    window.open(testUrl, '_blank');
                });
                console.log('Gestionnaire d\'\u00e9v\u00e9nement pour le bouton de test ajout\u00e9');
            }

            // Effectuer une recherche initiale pour vérifier que tout fonctionne
            console.log('Tentative de recherche initiale...');
            setTimeout(performSearch, 1000);
        });
    </script>
{% endblock %}